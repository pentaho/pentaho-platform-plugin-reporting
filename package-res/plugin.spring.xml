<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ws="http://jax-ws.dev.java.net/spring/core" xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
  xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://jax-ws.dev.java.net/spring/core http://jax-ws.dev.java.net/spring/core.xsd
                           http://jax-ws.dev.java.net/spring/servlet http://jax-ws.dev.java.net/spring/servlet.xsd
                           http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd">

  <context:annotation-config />

  <bean id="prpt" class="org.pentaho.reporting.platform.plugin.ReportContentGenerator" scope="prototype"/>
  <bean id="prpt.report" class="org.pentaho.reporting.platform.plugin.ReportContentGenerator" scope="prototype"/>
  <bean id="prpt.viewer" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="reportviewer/report.html" />
    <property name="pluginId" value="reporting" />
  </bean>  
  <bean id="prpt.mobile" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="reportviewer/report.html" />
    <property name="pluginId" value="reporting" />
  </bean>  
  <bean id="prpt.parameter" class="org.pentaho.reporting.platform.plugin.ParameterContentGenerator" scope="prototype"/>
  <bean id="prpt.backgroundExecution" class="org.pentaho.reporting.platform.plugin.SimpleReportingAction" scope="prototype"/>
  <bean id="prpt.parameterUi" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="reportviewer/report.html" />
    <property name="pluginId" value="reporting" />
  </bean>

  <bean id="prpt.viewer-gwt" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="reportviewer/gwt/report-test.html" />
    <property name="pluginId" value="reporting" />
  </bean>


  <bean id="prpt.reportjob" class="org.pentaho.reporting.platform.plugin.BackgroundJobReportContentGenerator" scope="prototype" />
  
  <bean id="SimpleReportingComponent" class="org.pentaho.reporting.platform.plugin.SimpleReportingComponent" scope="prototype"/>

  <!-- Register with PentahoSystem -->
  <bean class="org.pentaho.platform.engine.core.system.objfac.spring.ApplicationContextPentahoSystemRegisterer" scope="singleton"/>

  <bean class="org.pentaho.platform.engine.core.solution.ContentInfo">
  	<property name="mimeType" value="application/prpt"/>	
		<property name="extension" value=".prpt"/>	
		<property name="canImport" value="true"/>
		<property name="canExport" value="true"/>		
		<pen:publish as-type="INTERFACES"/>
	</bean>
  <bean id="org.pentaho.reporting.platform.plugin.output.ReportOutputHandlerFactory"
        class="org.pentaho.reporting.platform.plugin.output.FastExportReportOutputHandlerFactory" scope="prototype"/>
  <bean id="org.pentaho.reporting.platform.plugin.cache.ReportCache"
        class="org.pentaho.reporting.platform.plugin.cache.NullReportCache" scope="prototype"/>

  <bean id="plugin-cache-backend"
        class="org.pentaho.reporting.platform.plugin.cache.FileSystemCacheBackend" scope="singleton" >
    <property name="cachePath" value="/reporting-plugin/"/>
  </bean>

  <!--The bean is singleton, nevertheless it calls PentahoSessionHolder.getSession()
   on each cache key computation, so we have separate cache per session.
   Also it registers LogoutListener to clean cache for each session.-->
  <bean id="plugin-cache-strategy"
        class="org.pentaho.reporting.platform.plugin.cache.PluginSessionCache" scope="singleton">
    <constructor-arg ref="plugin-cache-backend"/>
  </bean>
  <bean id="plugin-cache-manager"
        class="org.pentaho.reporting.platform.plugin.cache.PluginCacheManagerImpl" scope="singleton">
    <constructor-arg ref="plugin-cache-strategy"/>
  </bean>

  <!-- thread pool executor -->
  <bean id="IPentahoAsyncExecutor" class="org.pentaho.reporting.platform.plugin.async.PentahoAsyncExecutor" scope="singleton" >
    <!-- fixed thread pool capacity -->
    <constructor-arg type="int" value="10" />
  </bean>

  <bean id="api" class="org.pentaho.platform.web.servlet.JAXRSPluginServlet"/>
  <bean class="org.pentaho.reporting.platform.plugin.JobManager">
    <!-- set to false to globally disable async reports generation -->
    <constructor-arg type="boolean" value="true" />
  </bean>

</beans>
