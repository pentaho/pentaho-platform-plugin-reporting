<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho.reporting.plugin</groupId>
    <artifactId>reporting-platform-plugin</artifactId>
    <version>10.3.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>classic-core-platform-plugin</artifactId>
  <version>10.3.0.0-SNAPSHOT</version>
  <name>Pentaho Platform Reporting Plugin Core</name>
  <properties>
    <js.project.list>common-ui,pentaho-cdf-js</js.project.list>
    <javascript.exclusion.pattern>**/*.jsdoc</javascript.exclusion.pattern>
    <javascript-test_karma-phase>integration-test</javascript-test_karma-phase>
    <build.dependenciesDirectory>${project.build.directory}/dependency</build.dependenciesDirectory>
    <js.build.optimizer>uglify</js.build.optimizer>
    <requirejs.config.files.pattern>**/*-require-js-cfg.js</requirejs.config.files.pattern>
    <build.javascriptTestConfigDirectory>${project.build.directory}/test-javascript</build.javascriptTestConfigDirectory>
    <pentaho-js-build.dir>${build.dependenciesDirectory}/pentaho-js-build</pentaho-js-build.dir>
    <commons-compress.version>1.26.1</commons-compress.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-cda</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-mondrian</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-olap4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-pmd</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-kettle</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-drill-down</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>legacy-charts</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.library</groupId>
      <artifactId>libformula</artifactId>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-api</artifactId>
      <version>${platform.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-core</artifactId>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-repository</artifactId>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-extensions</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <version>${jakarta.ws.rs-api.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${fasterxml-jackson.non-osgi.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${fasterxml-jackson.non-osgi.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${fasterxml-jackson.non-osgi.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jvnet.jax-ws-commons.spring</groupId>
      <artifactId>jaxws-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwt.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <version>${gwt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>commons-gwt-widgets</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.gwtx</groupId>
      <artifactId>gwtx</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-incubator</artifactId>
      <version>${gwt-incubator.version}</version>
    </dependency>
    <dependency>
      <groupId>com.allen-sauer.gwt.dnd</groupId>
      <artifactId>gwt-dnd</artifactId>
    </dependency>
    <dependency>
      <groupId>GWT-FX</groupId>
      <artifactId>GWT-FX</artifactId>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>common-ui</artifactId>
      <version>${common-ui.version}</version>
      <type>zip</type>
      <classifier>js</classifier>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-cdf-js</artifactId>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-js-build</artifactId>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-service-coordinator</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-core</artifactId>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>commons-xul-core</artifactId>
      <version>${platform.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-core</artifactId>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>simple-jndi</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>osgi.core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.stephenc.jcip</groupId>
      <artifactId>jcip-annotations</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- region - Needed for IT testing -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>${jakarta.servlet.version}</version>
    </dependency>
    <!-- endregion -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <version>${commons-compress.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <testResources>
      <testResource>
        <targetPath>${project.build.directory}/test</targetPath>
        <filtering>false</filtering>
        <directory>${project.basedir}/src/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>javascript-test_karma</id>
            <phase>integration-test</phase>
            <goals>
              <goal>karma</goal>
            </goals>
            <configuration>
              <workingDirectory>${project.basedir}/..</workingDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-requireCfg-bundles</id>

            <phase>${javascript_unpack-dependencies-phase}</phase>

            <goals>
              <goal>copy-resources</goal>
            </goals>

            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/config/resources</directory>
                  <includes>
                    <include>requireCfg.bundles.js</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <id>copy-javascript</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/src-javascript</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/javascript</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>target/dependency</directory>
                  <includes>
                    <include>common-ui/**</include>
                    <include>cdf/**</include>
                  </includes>
                  <excludes>
                    <exclude>common-ui/compressed/**</exclude>
                  </excludes>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
        <executions>
          <execution>
            <id>compressed</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <mkdir dir="${project.build.directory}/src-javascript/reportviewer/compressed"></mkdir>
                <copy todir="${project.build.directory}/src-javascript/reportviewer/compressed">
                  <fileset dir="${project.build.directory}/build-javascript/reportviewer">
                    <include name="**/formatter.js"></include>
                    <include name="**/reportviewer-app.js"></include>
                    <include name="**reportviewer-main-module.js"></include>
                  </fileset>
                </copy>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>copy-js-tests</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="${project.build.directory}/test-javascript">
                  <fileset dir="${project.build.directory}/src-javascript"></fileset>
                  <fileset dir="${project.basedir}/src/test/javascript"></fileset>
                  <fileset dir="${project.basedir}/src/test/config/javascript">
                    <include name="**/*.js"></include>
                  </fileset>
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>javascript-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>js</classifier>
              <classesDirectory>${project.build.directory}/src-javascript</classesDirectory>
              <includes>
                <include>reportviewer/**/*</include>
              </includes>
              <excludes>
                <exclude>**/compressed/**</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>javascript-compressed-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>js-compressed</classifier>
              <classesDirectory>${project.build.directory}/src-javascript</classesDirectory>
              <includes>
                <include>reportviewer/**/*</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
